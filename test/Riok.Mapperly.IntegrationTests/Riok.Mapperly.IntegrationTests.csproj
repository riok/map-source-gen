<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- setting the TargetFramework directly from the cli via -p:TargetFramework=netA.B does not work using a custom msbuild property seems to work -->
    <MapperlyIntegrationTestsTargetFramework Condition="'$(MapperlyIntegrationTestsTargetFramework)' == ''">net7.0</MapperlyIntegrationTestsTargetFramework>
    <TargetFramework>$(MapperlyIntegrationTestsTargetFramework)</TargetFramework>

    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
    <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)/GeneratedFiles</CompilerGeneratedFilesOutputPath>

    <!-- Not supported in .NET Framework -->
    <ImplicitUsings>disable</ImplicitUsings>
  </PropertyGroup>

  <PropertyGroup Condition="'$(MapperlyIntegrationTestsTargetFramework)' == 'net48'">
    <!-- .NET Framework 4.8 defaults to lang version 7.3, but we want to test nullable features. These are available in 8.0.
          To also use init-only properties, we upgrade to lang version 9.0, which is works, but is not officially supported. -->
    <LangVersion>9.0</LangVersion>
  </PropertyGroup>

  <!-- For local development, simply reference the projects. -->
  <ItemGroup Condition="'$(MapperlyNugetPackageVersion)' == ''">
    <ProjectReference Include="..\..\src\Riok.Mapperly\Riok.Mapperly.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    <ProjectReference Include="..\..\src\Riok.Mapperly.Abstractions\Riok.Mapperly.Abstractions.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="true" />
  </ItemGroup>

  <!-- In the CI pipeline, we always want to use a prebuilt nuget package version, since that nuget package will then be distributed -->
  <ItemGroup Condition="'$(MapperlyNugetPackageVersion)' != ''">
    <PackageReference Include="Riok.Mapperly" Version="$(MapperlyNugetPackageVersion)" />
  </ItemGroup>

  <ItemGroup Condition="'$(MapperlyIntegrationTestsTargetFramework)' == 'net48'">
    <PackageReference Include="Portable.System.DateTimeOnly" Version="7.0.0" />
  </ItemGroup>
</Project>
